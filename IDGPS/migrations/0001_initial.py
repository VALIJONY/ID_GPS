# Generated by Django 5.1.4 on 2025-01-27 07:48

import datetime
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DasturiyTaminot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dasturiy_taminot_nomi', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Rasxod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rasxod_nomi', models.TextField()),
                ('sana', models.DateField()),
                ('summa', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Sklad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gps_id', models.CharField(max_length=255)),
                ('olingan_odam', models.CharField(max_length=255)),
                ('tel_raqam', models.CharField(max_length=15)),
                ('summa_prixod', models.BigIntegerField()),
                ('olingan_sana', models.DateField()),
                ('sotildi_sotilmadi', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sotish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mijoz', models.CharField(max_length=255)),
                ('mijoz_tel_raqam', models.CharField(max_length=15)),
                ('sim_karta', models.TextField()),
                ('username', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=255)),
                ('abonent_tulov', models.BigIntegerField()),
                ('sana', models.DateField()),
                ('summasi', models.BigIntegerField()),
                ('naqd', models.BigIntegerField()),
                ('karta', models.BigIntegerField()),
                ('bank_schot', models.BigIntegerField()),
                ('master', models.CharField(max_length=255)),
                ('master_summasi', models.BigIntegerField()),
                ('dasturiy_taminot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDGPS.dasturiytaminot')),
                ('gps_id', models.ManyToManyField(to='IDGPS.sklad')),
            ],
        ),
        migrations.CreateModel(
            name='MashinaMalumoti',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mashina_turi', models.CharField(max_length=255)),
                ('davlat_raqami', models.CharField(max_length=20)),
                ('gps', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDGPS.sklad')),
                ('sotish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mashina_malumotlari', to='IDGPS.sotish')),
            ],
            options={
                'verbose_name': "Mashina ma'lumoti",
                'verbose_name_plural': "Mashina ma'lumotlari",
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('firstname', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('position', models.CharField(choices=[('Menejer', 'Meneger'), ('Xodim', 'Xodim'), ('Direktor', 'Direktor'), ('Sotuvchi', 'Sotuvchi')], default='Xodim', max_length=20)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('izoh', models.TextField()),
                ('sana', models.DateField(default=datetime.datetime(2025, 1, 27, 12, 48, 36, 644321))),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bugalteriya',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('oy', models.CharField(choices=[('Yanvar', 'Yanvar'), ('Fevral', 'Fevral'), ('Mart', 'Mart'), ('Aprel', 'Aprel'), ('May', 'May'), ('Iyun', 'Iyun'), ('Iyul', 'Iyul'), ('Avgust', 'Avgust'), ('Sentabr', 'Sentabr'), ('Oktabr', 'Oktabr'), ('Noyabr', 'Noyabr'), ('Dekabr', 'Dekabr')], max_length=15)),
                ('yil', models.IntegerField(help_text="Yil 2000 va hozirgi yil orasida bo'lishi kerak.", validators=[django.core.validators.MinValueValidator(2000), django.core.validators.MaxValueValidator(2025)])),
                ('abonent_tolov', models.BooleanField(default=False)),
                ('sim_karta_tolov', models.BooleanField(default=False)),
                ('izoh', models.TextField(blank=True, null=True)),
                ('gps', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDGPS.sklad')),
                ('sotish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDGPS.sotish')),
            ],
            options={
                'verbose_name_plural': 'Bugalteriya hisobotlari',
                'unique_together': {('sotish', 'gps', 'oy', 'yil')},
            },
        ),
    ]
