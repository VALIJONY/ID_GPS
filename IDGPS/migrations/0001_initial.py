# Generated by Django 5.1.4 on 2024-12-26 06:53

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Rasxod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rasxod_nomi', models.TextField()),
                ('sana', models.DateField()),
                ('summa', models.BigIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Sklad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gps_is', models.CharField(max_length=255)),
                ('olingan_odam', models.CharField(max_length=255)),
                ('tel_raqam', models.CharField(max_length=15)),
                ('summa_prixod', models.BigIntegerField()),
                ('olingan_sana', models.DateField()),
                ('sotildi_sotilmadi', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Sotish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mijoz', models.CharField(max_length=255)),
                ('mijoz_tel_raqam', models.CharField(max_length=15)),
                ('sim_karta', models.CharField(max_length=20)),
                ('dasturiy_taminot', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=100)),
                ('tulov_sammasi', models.BigIntegerField()),
                ('sana', models.DateField()),
                ('summasi', models.BigIntegerField()),
                ('gps_id', models.ManyToManyField(to='IDGPS.sklad')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('firstname', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('position', models.CharField(choices=[('Menejer', 'Meneger'), ('Xodim', 'Xodim'), ('Direktor', 'Direktor'), ('Sotuvchi', 'Sotuvchi')], default='Xodim', max_length=20)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
